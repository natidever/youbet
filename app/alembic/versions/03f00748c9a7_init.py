"""init

Revision ID: 03f00748c9a7
Revises: b65be8377784
Create Date: 2025-06-15 14:17:30.045639

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '03f00748c9a7'
down_revision: Union[str, None] = 'b65be8377784'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('casino',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('password_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('commission_rate', sa.Float(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('contact_email', sqlmodel.sql.sqltypes.AutoString(length=12), nullable=True),
    sa.Column('contact_phones', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_casino_username'), 'casino', ['username'], unique=True)
    op.create_table('round',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('round_number', sa.Integer(), nullable=False),
    sa.Column('server_seed', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('commitment_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('multiplier', sa.Float(), nullable=True),
    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_round_round_number'), 'round', ['round_number'], unique=True)
    op.create_table('casinoprofitperround',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('casino_id', sa.Integer(), nullable=False),
    sa.Column('round_id', sa.Integer(), nullable=False),
    sa.Column('total_bet_amount', sa.Float(), nullable=False),
    sa.Column('total_payout_amount', sa.Float(), nullable=False),
    sa.Column('profit', sa.Float(), nullable=False),
    sa.Column('commission_rate', sa.Float(), nullable=False),
    sa.Column('commission_amount', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['casino_id'], ['casino.id'], ),
    sa.ForeignKeyConstraint(['round_id'], ['round.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ticket',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('casino_id', sa.Integer(), nullable=False),
    sa.Column('round_id', sa.Integer(), nullable=False),
    sa.Column('ticket_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('guessed_multiplier', sa.Float(), nullable=False),
    sa.Column('bet_amount', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('actual_multiplier', sa.Float(), nullable=True),
    sa.Column('is_winner', sa.Boolean(), nullable=True),
    sa.Column('payout_amount', sa.Float(), nullable=True),
    sa.Column('is_redeemed', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['casino_id'], ['casino.id'], ),
    sa.ForeignKeyConstraint(['round_id'], ['round.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ticket_ticket_code'), 'ticket', ['ticket_code'], unique=True)
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('casino_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('reference_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('note', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['casino_id'], ['casino.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transaction')
    op.drop_index(op.f('ix_ticket_ticket_code'), table_name='ticket')
    op.drop_table('ticket')
    op.drop_table('casinoprofitperround')
    op.drop_index(op.f('ix_round_round_number'), table_name='round')
    op.drop_table('round')
    op.drop_index(op.f('ix_casino_username'), table_name='casino')
    op.drop_table('casino')
    # ### end Alembic commands ###
